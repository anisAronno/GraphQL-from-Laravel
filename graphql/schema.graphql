"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by ID or email."
    user(
        "Search by primary key."
        id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

        "Search by email address."
        email: String
            @eq
            @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users with optional name filter."
    users(
        "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
        name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

    "Find a single post by ID."
    post(id: ID! @eq): Post @find

    "List multiple posts with optional title filter."
    posts(
        "Filter by title. Accepts SQL LIKE wildcards `%` and `_`."
        title: String @where(operator: "like")
    ): [Post!]! @paginate(defaultCount: 10)
}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!

    "Posts created by this user."
    posts: [Post!]! @hasMany
}

"A blog post created by a user."
type Post {
    "Unique primary key."
    id: ID!

    "Post title."
    title: String!

    "Post content."
    body: String!

    "ID of the user who created this post."
    user_id: ID!

    "The user who created this post."
    user: User! @belongsTo

    "When the post was created."
    created_at: DateTime!

    "When the post was last updated."
    updated_at: DateTime!
}
